{"version":3,"sources":["components/Input.js","components/PersonalInformation.js","components/Education.js","components/Experience.js","App.js","index.js"],"names":["Input","_Component","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","handleChange","e","setState","text","target","value","handleFocus","select","handleSubmit","preventDefault","onUpdate","state","toggleEdit","prevState","isEditing","_inherits","_createClass","key","React","createElement","onSubmit","autoFocus","onFocus","onChange","onBlur","type","className","onClick","Component","PersonalInformation","handleUpdatePersonalInfo","id","personalInfo","_objectSpread","_defineProperty","fullName","email","phoneNumber","_this2","Object","entries","map","_ref","index","_ref2","_slicedToArray","defaultExperience","uniqid","schoolName","studyTitle","studyPeriod","Education","handleUpdateEducationalExperience","field","educationalExperiences","experience","handleAddEducationalExperience","concat","_toConsumableArray","handleDeleteEducationalExperience","filter","companyName","positionTitle","mainTasks","workPeriod","Experience","handleUpdateWorkExperience","workExperiences","handleUpdateTasks","experienceId","taskId","task","handleAddWorkExperience","handleAddTask","handleDeleteTask","handleDeleteWorkExperience","prevstate","App","apply","arguments","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.cf8ae144.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class Input extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: this.props.text || \"\",\n      isEditing: false,\n    };\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      text: e.target.value,\n    });\n  };\n\n  handleFocus = (e) => {\n    e.target.select();\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onUpdate(this.state.text);\n    this.toggleEdit();\n  };\n\n  toggleEdit = () => {\n    this.setState((prevState) => ({\n      isEditing: !prevState.isEditing,\n    }));\n  };\n\n  render() {\n    return this.state.isEditing ? (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          autoFocus\n          onFocus={this.handleFocus}\n          onChange={this.handleChange}\n          onBlur={this.handleSubmit}\n          value={this.state.text}\n          type=\"text\"\n        />\n      </form>\n    ) : (\n      <div className=\"editable\" onClick={this.toggleEdit}>\n        {this.state.text}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Input from \"./Input.js\";\n\nexport default class PersonalInformation extends Component {\n  constructor() {\n    super();\n    this.state = {\n      personalInfo: {\n        fullName: \"Full Name\",\n        email: \"email@example.com\",\n        phoneNumber: \"+00 000 000 0000\",\n      },\n    };\n  }\n\n  handleUpdatePersonalInfo = (id, text) => {\n    this.setState((prevState) => ({\n      personalInfo: {\n        ...prevState.personalInfo,\n        [id]: text,\n      },\n    }));\n  };\n\n  render() {\n    return (\n      <div className=\"data-block personal-information\">\n        <h2>Personal Informations</h2>\n        {Object.entries(this.state.personalInfo).map(([key, value], index) => (\n          <Input\n            key={index}\n            text={value}\n            id={key}\n            onUpdate={this.handleUpdatePersonalInfo}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Input from \"./Input\";\nimport uniqid from \"uniqid\";\n\nconst defaultExperience = {\n  id: uniqid(),\n  schoolName: \"XYZ University\",\n  studyTitle: \"Bachelor's in Computer Science\",\n  studyPeriod: \"08/2023 - 05/2027\",\n};\n\nexport default class Education extends Component {\n  constructor() {\n    super();\n    this.state = {\n      educationalExperiences: [\n        {\n          ...defaultExperience,\n        },\n      ],\n    };\n  }\n\n  handleUpdateEducationalExperience = (id, field, text) => {\n    this.setState((prevState) => ({\n      educationalExperiences: prevState.educationalExperiences.map(\n        (experience) =>\n          experience.id === id ? { ...experience, [field]: text } : experience\n      ),\n    }));\n  };\n\n  handleAddEducationalExperience = () => {\n    this.setState((prevState) => ({\n      educationalExperiences: [\n        ...prevState.educationalExperiences,\n        { ...defaultExperience, id: uniqid() },\n      ],\n    }));\n  };\n\n  handleDeleteEducationalExperience = (id) => {\n    this.setState((prevState) => ({\n      educationalExperiences: prevState.educationalExperiences.filter(\n        (experience) => {\n          return experience.id !== id;\n        }\n      ),\n    }));\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"data-block work-experiences\">\n          {this.state.educationalExperiences.map((experience, index) => (\n            <div\n              className=\"educational-experience experience-section\"\n              key={experience.id}\n            >\n              <div className=\"experience-header\">\n                <h3>Educational Experience {index + 1}</h3>\n                <button\n                  onClick={() => {\n                    this.handleDeleteEducationalExperience(experience.id);\n                  }}\n                >\n                  X\n                </button>\n              </div>\n              <Input\n                text={experience.schoolName}\n                onUpdate={(text) =>\n                  this.handleUpdateEducationalExperience(\n                    experience.id,\n                    \"schoolName\",\n                    text\n                  )\n                }\n              />\n              <Input\n                text={experience.studyTitle}\n                onUpdate={(text) =>\n                  this.handleUpdateEducationalExperience(\n                    experience.id,\n                    \"studyTitle\",\n                    text\n                  )\n                }\n              />\n              <Input\n                text={experience.studyPeriod}\n                onUpdate={(text) =>\n                  this.handleUpdateEducationalExperience(\n                    experience.id,\n                    \"studyPeriod\",\n                    text\n                  )\n                }\n              />\n            </div>\n          ))}\n        </div>\n        <button onClick={this.handleAddEducationalExperience}>\n          Add New Education Experience\n        </button>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Input from \"./Input\";\nimport uniqid from \"uniqid\";\n\nconst defaultExperience = {\n  id: uniqid(),\n  companyName: \"XYZ Corp.\",\n  positionTitle: \"Software Engineer\",\n  mainTasks: [\n    {\n      id: uniqid(),\n      text: \"Developed and maintained web applications\",\n    },\n    {\n      id: uniqid(),\n      text: \"Collaborated in cross-functional teams to improve software design\",\n    },\n  ],\n  workPeriod: \"January 2022 - Present\",\n};\n\nexport default class Experience extends Component {\n  constructor() {\n    super();\n    this.state = {\n      workExperiences: [{ ...defaultExperience }],\n    };\n  }\n\n  handleUpdateWorkExperience = (id, field, text) => {\n    this.setState((prevState) => ({\n      workExperiences: prevState.workExperiences.map((experience) =>\n        experience.id === id ? { ...experience, [field]: text } : experience\n      ),\n    }));\n  };\n\n  handleUpdateTasks = (experienceId, taskId, text) => {\n    this.setState((prevState) => ({\n      workExperiences: prevState.workExperiences.map((experience) =>\n        experience.id === experienceId\n          ? {\n              ...experience,\n              mainTasks: experience.mainTasks.map((task) =>\n                task.id === taskId ? { ...task, text: text } : task\n              ),\n            }\n          : experience\n      ),\n    }));\n  };\n\n  handleAddWorkExperience = () => {\n    this.setState((prevState) => ({\n      workExperiences: [\n        ...prevState.workExperiences,\n        { ...defaultExperience, id: uniqid() },\n      ],\n    }));\n  };\n\n  handleAddTask = (id) => {\n    this.setState((prevState) => ({\n      workExperiences: prevState.workExperiences.map((experience) => {\n        return experience.id === id\n          ? {\n              ...experience,\n              mainTasks: [\n                ...experience.mainTasks,\n                { id: uniqid(), text: \"Enter New Task\" },\n              ],\n            }\n          : experience;\n      }),\n    }));\n  };\n\n  handleDeleteTask = (experienceId, taskId) => {\n    this.setState((prevState) => ({\n      workExperiences: prevState.workExperiences.map((experience) =>\n        experience.id === experienceId\n          ? {\n              ...experience,\n            mainTasks: experience.mainTasks.filter((task) =>{\n              return task.id !== taskId;\n            }),\n            }\n          : experience\n      ),\n    }));\n  };\n\n  handleDeleteWorkExperience = (id) => {\n    this.setState((prevstate) => ({\n      workExperiences: prevstate.workExperiences.filter((experience) => {\n        return experience.id !== id;\n      }),\n    }));\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"data-block work-experience\">\n          {this.state.workExperiences.map((experience, index) => (\n            <div\n              className=\"work-experience experience-section\"\n              key={experience.id}\n            >\n              <div className=\"experience-header\">\n                <h3>Work Experience {index + 1}</h3>\n                <button\n                  onClick={() => this.handleDeleteWorkExperience(experience.id)}\n                >\n                  X\n                </button>\n              </div>\n              <Input\n                text={experience.companyName}\n                onUpdate={(text) =>\n                  this.handleUpdateWorkExperience(\n                    experience.id,\n                    \"companyName\",\n                    text\n                  )\n                }\n              />\n              <Input\n                text={experience.positionTitle}\n                onUpdate={(text) =>\n                  this.handleUpdateWorkExperience(\n                    experience.id,\n                    \"companyName\",\n                    text\n                  )\n                }\n              />\n              <ul>\n                {experience.mainTasks.map((task) => (\n                  <li className=\"task-item\" key={task.id}>\n                    <Input\n                      text={task.text}\n                      onUpdate={(text) =>\n                        this.handleUpdateTasks(experience.id, task.id, text)\n                      }\n                    />\n                    <button\n                      onClick={() =>\n                        this.handleDeleteTask(experience.id, task.id)\n                      }\n                    >\n                      X\n                    </button>\n                  </li>\n                ))}\n              </ul>\n              <button onClick={() => this.handleAddTask(experience.id)}>\n                +\n              </button>\n              <Input\n                text={experience.workPeriod}\n                onUpdate={(text) =>\n                  this.handleUpdateWorkExperience(\n                    experience.id,\n                    \"workPeriod\",\n                    text\n                  )\n                }\n              />\n            </div>\n          ))}\n        </div>\n        <button onClick={this.handleAddWorkExperience}>\n          Add New Work Experience\n        </button>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport PersonalInformation from \"./components/PersonalInformation\";\nimport Education from \"./components/Education\";\nimport Experience from \"./components/Experience\";\nimport \"./App.css\";\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div id=\"PageApp\">\n        <div className=\"main\">\n          <PersonalInformation></PersonalInformation>\n          <Education></Education>\n          <Experience></Experience>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n"],"sourceRoot":""}